@model CustomerServiceControl.ViewModels.RootViewModel

@{
    ViewBag.Title = "Gerenciamento de Atendimentos";
}

<div class="container">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @using (Html.BeginForm("CustomerSearch", "Home", FormMethod.Get))
    {
        var items = new List<SelectListItem>()
    {
    new SelectListItem() { Text = "Nome", Value = "0" },
    new SelectListItem() { Text = "Empresa", Value = "1" },
    };
    <div class="row">
        <div class="col-lg-7 col-lg-offset-3 text-center">
            <div class="form-group">
                @Html.DropDownListFor(model => model.SearchType, items, null, new { @class = "btn btn-default col-lg-3" })
                @Html.EditorFor(model => model.SearchValue, new { htmlAttributes = new { @class = "form-control col-lg-3", placeholder = "Pesquisar.." } })
                <input type="image" src="~/Content/Images/search-button.png" width="25" height="25" class="col-lg-1"/>
            </div>
        </div>
    </div>
    }

    <div class="row col-lg-12">
        <h3>Lista de clientes</h3>
        <hr />
    </div>
    
    <div class="row col-lg-12">
        <div class="form-group">
            @Html.ActionLink("Novo", "Create", "Customer", null, new { @class = "btn btn-default" })
            @Html.ActionLink("Relatório", "Report", "Customer", null, new { @class = "btn btn-default" })
        </div>
    </div>
    
    <div class="row col-lg-12">
        <div class="form-group">
            <table class="table table-responsive">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().CompanyName)</th>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().Email)</th>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().Phone)</th>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().DateTimeFirstAttendance)</th>
                    <th>@Html.DisplayNameFor(model => model.Customers.FirstOrDefault().DateTimeLastAttendance)</th>
                    <th>Ações</th>
                </tr>
                @foreach (var item in Model.Customers)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.CompanyName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                        <td>@Html.DisplayFor(modelItem => item.DateTimeFirstAttendance)</td>
                        <td>@Html.DisplayFor(modelItem => item.DateTimeLastAttendance)</td>
                        <td>
                            @Html.ActionLink("Editar", "Edit", "Customer", new { id = item.Id }, null) |
                            @Html.ActionLink("Deletar", "Delete", "Customer", new { id = item.Id }, null)
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
